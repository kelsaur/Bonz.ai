useDotenv: true 

org: ${env:AWS_ORG}
service: ${env:AWS_SERVICE}

provider:
  name: aws
  runtime: nodejs22.x
  region: eu-north-1
  iam:
    role: ${env:AWS_IAM_ROLE}

iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource:
      - "arn:aws:dynamodb:${self:provider.region}:*:table/HotelBooking" 

functions:
  createBooking:
    handler: functions/createBooking/index.handler
    events:
      - httpApi:
          path: /bookings
          method: post

  deleteBooking:
    handler: functions/deleteBooking/index.handler
    events:
      - httpApi:
          path: /bookings/{bookingId}
          method: delete 

  getBookingById:
    handler: functions/getBookingById/index.handler
    events:
      - httpApi:
          path: /bookings/{bookingId}
          method: get

  getAllBookings:
    handler: functions/getAllBookings/index.handler
    events:
      - httpApi:
          path: /bookings
          method: get

  getRooms:
    handler: functions/getRooms/index.handler
    events:
      - httpApi:
          path: /rooms
          method: get

  updateBooking:
    handler: functions/updateBooking/index.handler
    events:
      - httpApi:
          path: /bookings/{bookingId}
          method: put

  # Resources:
  #   HotelBooking:
  #     Type: AWS::DynamoDB::Table
  #     Properties:
  #       TableName: HotelBooking
  #       AttributeDefinitions:
  #         - AttributeName: pk
  #           AttributeType: S 
  #         - AttributeName: sk
  #           AttributeType: S
  #       KeySchema:
  #         - AttributeName: pk
  #           KeyType: HASH # HASH = partition key
  #         - AttributeName: sk
  #           KeyType: RANGE # RANGE = sort key
  #       BillingMode: PAY_PER_REQUEST